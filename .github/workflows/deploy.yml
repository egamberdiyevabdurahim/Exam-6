name: CI/CD Pipeline

on:
  push:
    branches:
      - master  # Trigger workflow on push to master branch

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Set up Docker
      uses: docker/setup-buildx-action@v2

    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USER }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build and Push Docker Image
      uses: docker/build-push-action@v4
      with:
        context: .
        push: true
        tags: ${{ secrets.DOCKERHUB_USER }}/exam-6:latest  # Docker image name aligned with project

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
    - name: Deploy to Server
      uses: appleboy/ssh-action@v0.1.11
      with:
        host: 138.197.184.77  # Replace with your server's IP address
        username: root  # Replace with your server username
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        port: 22
        script: |
          # Ensure the Docker network exists
          docker network inspect exam6_network >/dev/null 2>&1 || docker network create exam6_network

          # Pull the latest Docker image
          docker pull ${{ secrets.DOCKERHUB_USER }}/exam-6:latest

          # Stop and remove old containers if they exist
          docker ps -q --filter "name=exam6_web" | grep -q . && docker stop exam6_web && docker rm exam6_web
          docker ps -q --filter "name=exam6_db" | grep -q . && docker stop exam6_db && docker rm exam6_db

          # Run the new database container
          docker run -d --name exam6_db \
            --network=exam6_network \
            -e POSTGRES_USER=postgres \
            -e POSTGRES_PASSWORD=01012008 \
            -e POSTGRES_DB=exam_6 \
            -v exam6_postgres_data:/var/lib/postgresql/data \
            postgres:15

          # Run the new web container
          docker run -d --name exam6_web \
            --env-file /root/exam6/.env \
            --network=exam6_network \
            -p 8000:8000 \
            --restart=always \
            ${{ secrets.DOCKERHUB_USER }}/exam-6:latest \
            sh -c "python manage.py migrate && python manage.py runserver 0.0.0.0:8000"

          # Optional: Display logs for debugging
          sleep 5
          docker logs exam6_web
